{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{632:function(s,t,r){s.exports=r.p+\"assets/img/image-20220408143957957.9f4955fa.png\"},633:function(s,t,r){s.exports=r.p+\"assets/img/image-20220408144147920.54973eb0.png\"},634:function(s,t,r){s.exports=r.p+\"assets/img/image-20220408144442127.18696fd2.png\"},705:function(s,t,r){\"use strict\";r.r(t);var a=r(3),v=Object(a.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"这一节介绍棋子的走法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#这一节介绍棋子的走法\"}},[s._v(\"#\")]),s._v(\" 这一节介绍棋子的走法\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"走法表示\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#走法表示\"}},[s._v(\"#\")]),s._v(\" 走法表示\")]),s._v(\" \"),a(\"p\",[s._v(\"一个走法包括起点和终点，分别用sqSrc和pcDst表示一维棋局数组中的起点和终点。很容易想到，使用数组[sqSrc, pcDst]表示一个走法。但程序将来会处理大量的走法，使用数组表示走法太浪费内存。由于sqSrc和pcDst都是不超过255的整数（因为一维棋盘数组的大小是256），可以将sqSrc和pcDst压缩到一个整数中，算法如下：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-vue line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-vue\"}},[a(\"code\",[s._v(\"MOVE(sqSrc, sqDst) {// 获取走法的起点\\n  return sqSrc + (sqDst << 8);\\n}\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"div\",{staticClass:\"language-vue line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-vue\"}},[a(\"code\",[s._v(\"DST(mv) {// 获取走法的终点\\n  return mv >> 8;\\n}\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"ol\",[a(\"li\",[s._v(\"将的走法有四个方向，如下图所示：\")])]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:r(632),alt:\"image-20220408143957957\"}})]),s._v(\" \"),a(\"p\",[s._v(\"在一维数组中，1、2、3、4几个方向的起点和终点分别满足以下等式：\")]),s._v(\" \"),a(\"p\",[s._v(\"pcDst = sqSrc - 16\")]),s._v(\" \"),a(\"p\",[s._v(\"pcDst = sqSrc - 1\")]),s._v(\" \"),a(\"p\",[s._v(\"pcDst = sqSrc + 1\")]),s._v(\" \"),a(\"p\",[s._v(\"pcDst = sqSrc + 16\")]),s._v(\" \"),a(\"p\",[s._v(\"且必须在九宫格内\")]),s._v(\" \"),a(\"ol\",{attrs:{start:\"2\"}},[a(\"li\",[a(\"p\",[s._v(\"士的走法也是四个方向，如下所示\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:r(633),alt:\"image-20220408144147920\"}})])])]),s._v(\" \"),a(\"p\",[s._v(\"士的4个方向分别满足以下等式：\")]),s._v(\" \"),a(\"p\",[s._v(\"pcDst = sqSrc - 17\")]),s._v(\" \"),a(\"p\",[s._v(\"pcDst = sqSrc - 15\")]),s._v(\" \"),a(\"p\",[s._v(\"pcDst = sqSrc + 15\")]),s._v(\" \"),a(\"p\",[s._v(\"pcDst = sqSrc + 17\")]),s._v(\" \"),a(\"p\",[s._v(\"且终点sqSrc位于九宫内\")]),s._v(\" \"),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[a(\"p\",[s._v(\"象的四个走法如下图所示，黑三角是相应的象眼位置\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:r(634),alt:\"image-20220408144442127\"}})])])]),s._v(\" \"),a(\"p\",[s._v(\"象的4个方向分别满足以下等式：\")]),s._v(\" \"),a(\"p\",[s._v(\"pcDst = sqSrc - 34\")]),s._v(\" \"),a(\"p\",[s._v(\"pcDst = sqSrc - 30\")]),s._v(\" \"),a(\"p\",[s._v(\"pcDst = sqSrc + 30\")]),s._v(\" \"),a(\"p\",[s._v(\"pcDst = sqSrc + 34\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"象不能过河\")])]),s._v(\" \"),a(\"p\",[s._v(\"在程序中，棋局被表示为大小为256的一维数组，一半棋盘位于0到127，另一半位于128到255。\")]),s._v(\" \"),a(\"p\",[s._v(\"128的二进制是1000 0000，右起第八位是1。128到255这些数的二进制，右起第8位都是1；0到127这些数的二进制，右起第8位都是0。因此，如果象没过河，也就是pcDst和sqSrc位于相同的一半棋盘，那么\")]),s._v(\" \"),a(\"p\",[s._v(\"2）象眼无棋子\")]),s._v(\" \"),a(\"p\",[s._v(\"象眼位于sqSrc和sqDst的中点，判断(sqSrc + sqDst)/2 的位置是否有棋子即可。\")])])}),[],!1,null,null,null);t.default=v.exports}}]);","extractedComments":[]}