{"remainingRequest":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\vuepress-plugin-sakura\\bin\\Sakura.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\vuepress-plugin-sakura\\bin\\Sakura.vue","mtime":1648974586473},{"path":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648514419946},{"path":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\babel-loader\\lib\\index.js","mtime":1648514420186},{"path":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648514419946},{"path":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\vue-loader\\lib\\index.js","mtime":1648514420515}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}