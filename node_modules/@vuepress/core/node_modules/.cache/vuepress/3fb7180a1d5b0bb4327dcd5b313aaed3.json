{"remainingRequest":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\docs\\.vuepress\\components\\Chess2.vue?vue&type=style&index=0&id=4509e988&scoped=true&lang=scss&","dependencies":[{"path":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\docs\\.vuepress\\components\\Chess2.vue","mtime":1650552043085},{"path":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\css-loader\\dist\\cjs.js","mtime":1648514419984},{"path":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1648514420974},{"path":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\postcss-loader\\src\\index.js","mtime":1648514420186},{"path":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1648533350822},{"path":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648514419946},{"path":"D:\\CodingForFun\\Vue\\somePrograms\\gaosen\\node_modules\\vue-loader\\lib\\index.js","mtime":1648514420515}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRvdGFsQm94IHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgZm9udC1zaXplOiAyY2g7CiAgLmNzczJlYmQ2NzNhZjcyNDNiNyB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICByaWdodDogNDUlOwogICAgbGVmdDogNDUlOwogICAgdG9wOiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7CiAgICBmb250LXNpemU6IDIuNXZ3OwogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtd3JhcDogbm93cmFwOwogICAgd2lkdGg6IDUwJTsKICB9CiAgLnRpcEJveCB7CiAgICBmb250LWZhbWlseTogJ0xpU2h1JzsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGxlZnQ6IDEwJTsKICAgIHRvcDogNDAlOwogICAgLyogd2lkdGg6IDJjaDsgKi8KICAgIC8qIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgKi8KICAgIGZvbnQtc2l6ZTogMi41dnc7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgIC8qIGFsaWduLWl0ZW1zOiBiYXNlbGluZTsgKi8KICAgIGZsZXgtd3JhcDogbm93cmFwOwogICAgd2lkdGg6IDFjaDsKICB9CgogIC50aXBCb3gyIHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMzgsIDUwLCA1NiwgLjkpOwogICAgY29sb3I6IHdoaXRlOwogICAgLy9kaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAvL2FsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBmbGV4LXdyYXA6IHdyYXA7CiAgICBwYWRkaW5nOiA1cHg7CiAgICB6LWluZGV4OiAxOwogICAgLndpbk1zZyB7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgZm9udC1zaXplOiA1dnc7CiAgICAgIC5zY29yZUJveCB7CiAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICBtYXJnaW4tYm90dG9tOiAtMjB2dzsKICAgICAgICAud1Njb3JlIHsKICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgIH0KICAgICAgICAuYlNjb3JlIHsKICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgIH0KICAgICAgICAuY29tbWVudEJveCB7CiAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIC5idG5Cb3ggewogICAgICB3aWR0aDogMTAwJTsKICAgICAgLy9kaXNwbGF5OiBmbGV4OwogICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgfQogIH0KCiAgLmYxIHsKICAgIG1hcmdpbjogNXB4OwogICAgYm9yZGVyOiBub25lOwogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgIHBhZGRpbmc6IDEzcHggMTBweDsKICAgIGNvbG9yOiB3aGl0ZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICMxYTZhYTY7CiAgICBib3JkZXItcmFkaXVzOiAxMHB4OwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgZm9udC13ZWlnaHQ6IDYwMDsKICB9CgogIC5mMTpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTI2MDliOwogIH0KfQpAZm9udC1mYWNlIHsKICBmb250LWZhbWlseTogJ0xpU2h1JzsKICBzcmM6IHVybCgiLi4vcHVibGljL2Nzcy9MaVNodS9MaVNodS5lb3QiKTsgLyogSUU5ICovCiAgc3JjOiB1cmwoIi4uL3B1YmxpYy9jc3MvTGlTaHUvTGlTaHUuZW90PyNpZWZpeCIpIGZvcm1hdCgiZW1iZWRkZWQtb3BlbnR5cGUiKTsgLyogSUU2LUlFOCAqLwoKICBzcmM6IHVybCgnLi4vcHVibGljL2Nzcy9MaVNodS9MaVNodS53b2ZmJykgZm9ybWF0KCd3b2ZmJyksIC8qIE1vZGVybiBCcm93c2VycyAqLwogIHVybCgnLi4vcHVibGljL2Nzcy9MaVNodS9MaVNodS50dGYnKSAgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBTYWZhcmksIEFuZHJvaWQsIGlPUyAqLwogIHVybCgiLi4vcHVibGljL2Nzcy9MaVNodS9MaVNodS5zdmciKSAgZm9ybWF0KCdzdmcnKTsgLyogTGVnYWN5IGlPUyAqLwp9Cg=="},{"version":3,"sources":["Chess2.vue"],"names":[],"mappingsmwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Chess2.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\r\n  <div class=\"totalBox\">\r\n    <div class=\"tipBox css2ebd875383243b7\">走棋方：\r\n      <span class=\"css2ebd875383243b7\" :style=\"playerSide ? 'color: #c40a01':'color: black'\">\r\n        {{this.playSideStr}}\r\n      </span>\r\n    </div>\r\n    <div class=\"tipBox2\">\r\n      <div class=\"winMsg\">{{ this.playSideStr }}胜利！</div>\r\n      <div class=\"scoreBox\">\r\n        <div class=\"wScore\">红方得分：{{ this.wScore }}</div>\r\n        <div class=\"bScore\">黑方得分：{{ this.bScore }}</div>\r\n        <br>\r\n        <div class=\"commentBox\">\r\n          <div>红方得到的评语：{{ this.wMarkMsg }}</div>\r\n          <div>黑方得到的评语：{{ this.bMarkMsg }}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"btnBox\">\r\n        <button @click=\"winSure\" class=\"f1\">重开！</button>\r\n      </div>\r\n    </div>\r\n    <button class=\"f1\" @click=\"initBoard\">remake</button>\r\n    <chess1 @show=\"chess1Click\" :displayChess=\"displayChess\"></chess1>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport chess1 from \"./Chess1\";\r\n\r\nexport default {\r\n  name: \"chess2\",\r\n  components: {chess1},\r\n  data() {\r\n    return {\r\n      FEN: 'rnbakabnr/9/1c5c1/p1p1p1p1p/9/9/P1P1P1P1P/1C5C1/9/RNBAKABNR',\r\n      IN_BOARD_: [\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n      ],\r\n      selectedPos: 0,//用于记录选择的位置\r\n      sqSrc: -1,\r\n      sqDest: -1,\r\n      displayChess: [\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,//3\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,//12\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n      ],\r\n      pieceNumber: {\r\n        king: 0,//帅\r\n        advisor: 1,//士\r\n        bishop: 2,//相\r\n        knight: 3,//马\r\n        rook: 4,//车\r\n        cannon: 5,//炮\r\n        pawn: 6,//卒\r\n      },\r\n      pcSelfSide: 0,//走棋方为红方时pcSelfSide=8，走棋方为黑方时pcSelfSide=16\r\n      IN_FORT_: [//辅助数组，标识是否在九宫内\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n      ],\r\n      LEGAL_SPAN: [//辅助数组,用于判断sqDest-sqSrc等于-16、-1、1、16其中的一个\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0,\r\n      ],\r\n      KNIGHT_PIN_: [//辅助数组，用于判断马脚处是否有棋子\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, -16, 0, -16, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 16, 0, 16, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0,\r\n      ],\r\n      playerSide: true,//走棋方为红方时为true，走棋方为黑方时为false\r\n      KING0_INDEX: 199,//红方帅的坐标\r\n      KING1_INDEX: 55,//黑方将的坐标\r\n      wScore: 0,\r\n      bScore: 0,\r\n      markMsgArr: [\r\n        '是不是没开显示器？',\r\n        '都说你的技艺忽似三岁孩童，忽似八十老翁，今天一感受果然名不虚传。',\r\n        '你们可别小看了新来的技术员，虽然他有点其貌不扬，但才华出众。',\r\n        '这位技艺精湛的技术员是我们三顾茅庐才请到的，技艺简直可以说是独一无二了。',\r\n        '你就是一个前无古人、后无来者、玉树临风、英俊潇洒的天生奇才。',\r\n        '你的每一刀都很精准，我身上好像有蚂蚁在爬',\r\n      ],\r\n      wMarkMsg: 'err',\r\n      bMarkMsg: 'err',\r\n    }\r\n  },\r\n  computed: {\r\n    playSideStr() {\r\n      return this.playerSide ? '红方' : '黑方'\r\n    }\r\n  },\r\n  mounted() {\r\n    // const css = document.createElement('link');\r\n    // css.rel = 'stylesheet';\r\n    // css.href = 'https://cdn.repository.webfont.com/webfonts/nomal/148407/46489/62540fe2f629d81300ac19b5.css';\r\n    // document.body.appendChild(css);\r\n  },\r\n  methods: {\r\n    IN_BOARD(sq) {\r\n      return this.IN_BOARD_[sq] !== 0;\r\n    },\r\n    COORD_XY(x, y) {// 将二维矩阵坐标转换为一维矩阵坐标 (x,y)含(0,0)\r\n      return x + (y << 4);\r\n    },\r\n    IN_FORT(sq) {\r\n      return this.IN_FORT_[sq] !== 0;\r\n    },\r\n    SAME_HALF(sqSrc, sqDst) {// 如果从起点sqSrc到终点sqDst没有过河，则返回true；否则返回false\r\n      return ((sqSrc ^ sqDst) & 0x80) === 0;\r\n    },\r\n    AWAY_HALF(sq, sd) {// sq是棋子位置，sd是走棋方（红方0，黑方1）。如果该位置已过河，则返回true；否则返回false。\r\n      return (sq & 0x80) === (sd << 7);\r\n    },\r\n    SQUARE_FORWARD(sq, sd) {\r\n      return sq - 16 + (sd << 5);\r\n    },\r\n    initBoard() {\r\n      this.displayChess = [\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,//3\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\r\n        0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,//12\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n      ]//清空一下棋盘,这里会导致报错Cannot read property '0' of undefined，不过不重要，依然能实现\r\n      // this.FENArray = this.FEN.split('') //将FEN字符串转为数组\r\n      this.playerSide = true\r\n      this.sqSrc = this.sqDest = this.pcSelfSide = this.selectedPos = this.wScore = this.bScore = 0\r\n      this.wMarkMsg = ''\r\n      this.KING0_INDEX = 199\r\n      this.KING1_INDEX = 55\r\n      this.FENtoBoard(this.FEN.split(''))//将FEN串(array型)转化为一维数组形式，并且字符元素映射为整型,保存在this.displayChess\r\n      for (let i = 0; i < 256; i++) {//将棋盘外元素设置为null\r\n        if (!this.IN_BOARD(i)) {\r\n          this.displayChess[i] = null\r\n        }\r\n        // else this.displayChess[i] = 1\r\n      }\r\n      let start = this.COORD_XY(3, 3) //51,循环开始处\r\n      let end = this.COORD_XY(11, 12) //203，循环结束处\r\n      // let imgDomArr = document.querySelectorAll('div.imgBox img')\r\n      /*tag用作记录文件名关键信息；\r\n      **row是当前循环索引值i对应的二维坐标的行数,col是列数；\r\n      **imgIndex用于记录i对应第几个图片*/\r\n      let tag = '', row = 0, imgIndex = 0, col = 0;\r\n      for (let i = start; i <= end; i++) {\r\n        if (this.IN_BOARD(i)) {\r\n          switch (this.displayChess[i]) {\r\n            case 8:\r\n              tag = 'K';\r\n              break;\r\n            case 9:\r\n              tag = 'A';\r\n              break;\r\n            case 10:\r\n              tag = 'B';\r\n              break;\r\n            case 11:\r\n              tag = 'N';\r\n              break;\r\n            case 12:\r\n              tag = 'R';\r\n              break;\r\n            case 13:\r\n              tag = 'C';\r\n              break;\r\n            case 14:\r\n              tag = 'P';\r\n              break;\r\n\r\n            case 16:\r\n              tag = 'k_';\r\n              break;\r\n            case 17:\r\n              tag = 'a_';\r\n              break;\r\n            case 18:\r\n              tag = 'b_';\r\n              break;\r\n            case 19:\r\n              tag = 'n_';\r\n              break;\r\n            case 20:\r\n              tag = 'r_';\r\n              break;\r\n            case 21:\r\n              tag = 'c_';\r\n              break;\r\n            case 22:\r\n              tag = 'p_';\r\n              break;\r\n            case 1:\r\n              tag = 'UNexist';\r\n              break;\r\n            case 0:\r\n              tag = 'UNexist'\r\n              break;\r\n            default:\r\n              tag = 'UNexist'\r\n          }\r\n          row = this.RANK_Y(i)\r\n          col = this.FILE_X(i)\r\n          imgIndex = i - 7 * row - 30\r\n          let imgSrcStr = `/img/chess/${tag}.png`;\r\n          this.imgDomArr[imgIndex].src = imgSrcStr\r\n          /*清空变量*/\r\n          tag = '';\r\n          row = 0;\r\n          imgIndex = 0\r\n        }\r\n      }\r\n\r\n    },\r\n    FENtoBoard(FENArray) {\r\n      let x = 3, y = 3\r\n      for (let i in FENArray) {\r\n        let ch = FENArray[i]\r\n        if (ch == '/') {//换行\r\n          y++\r\n        }\r\n        if (y > 12) break\r\n        if (x > 11) x = 3\r\n        else if (ch >= '1' && ch <= '9') {//出现空位\r\n          x += parseInt(ch)\r\n        } else if ((ch >= 'a' && ch <= 'z')) {//红方棋子或黑方棋子\r\n          let index = x + (y << 4)\r\n          this.displayChess[index] = this.FENCharToNum(ch)\r\n          x++\r\n        } else if (ch >= 'A' && ch <= 'Z') {\r\n          let index = x + (y << 4)\r\n          this.displayChess[index] = this.FENCharToNum(ch)\r\n          x++\r\n        } else console.log('err');\r\n      }\r\n    },\r\n    chess1Click(chessInfo) {\r\n      // this.judgeKtoK()\r\n      this.displayChess = chessInfo.displayChess //把子组件发射的棋盘储存一下\r\n      this.manageBoardArray()//整理一下棋盘\r\n      this.sq = chessInfo.sqSelected\r\n      let currentPc = this.displayChess[chessInfo.sqSelected]\r\n      let flag1 = this.playerSide && (currentPc >= 8 && currentPc <= 14) //标识是否为：红方走棋且棋子的值是红方\r\n      let flag2 = !this.playerSide && currentPc >= 16 // 标识是否为：黑方走棋且棋子的值是黑方\r\n      if (this.selectedPos === 0 && (flag1 || flag2)) {\r\n        // 当前棋盘上没有棋子被选中,如果点击的是己方棋子，那么直接选中该子\r\n        this.selectedPos = chessInfo.sqSelected\r\n      }\r\n      else if (this.selectedPos !== 0) {//当前棋盘上有棋子被选中\r\n        if (flag1 || flag2) {// 点击的是本方棋子\r\n          this.selectedPos = chessInfo.sqSelected\r\n        }\r\n        else {//点击的是对方棋子或空白处\r\n          this.sqSrc = this.selectedPos\r\n          this.sqDest = chessInfo.sqSelected\r\n          let flag3 = this.judgeMove(this.displayChess[this.sqSrc], this.sqSrc, this.sqDest)//用于标记走棋是否合法\r\n          if (flag3) {\r\n\r\n            /*前2种情况是游戏结束时执行*/\r\n            if (this.displayChess[this.sqDest] === 8) {//如果吃掉红方的帅\r\n              $('div.tipBox2').attr('style', 'display: flex;')\r\n              this.bScore += 40\r\n              this.markBoard()\r\n            }\r\n            else if (this.displayChess[this.sqDest] === 16) {//如果吃掉黑方的将\r\n              $('div.tipBox2').attr('style', 'display: flex;')\r\n              this.wScore += 40\r\n              this.markBoard()\r\n            }\r\n            else {\r\n              if (this.displayChess[this.sqDest] & 8) {//终点处是红方棋子\r\n                this.bScore += 10\r\n              }\r\n              else if (this.displayChess[this.sqDest] & 16) {//终点处是黑方棋子\r\n                this.wScore += 10\r\n              }\r\n\r\n              this.$set(this.displayChess, this.sqDest, this.displayChess[this.sqSrc])//将起点处的棋子移到终点处\r\n              this.$set(this.displayChess, this.sqSrc, 1)\r\n              this.playerSide = !this.playerSide\r\n\r\n              // console.log('终点棋子:' + this.displayChess[this.sqDest]);\r\n              // console.log('起点棋子:' + this.displayChess[this.sqSrc]);\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n      }\r\n      this.judgeKtoK()\r\n    },\r\n    drawWithFEN() {\r\n      // this.FENArray = []\r\n      // this.FENArray = FEN.split('')\r\n      // this.displayChess = []\r\n      // this.FENtoBoard(this.FENArray)\r\n      // // console.log(this.displayChess);\r\n      // for(let i=0;i<256;i++) {//将棋盘外元素设置为null\r\n      //   if(!this.IN_BOARD(i)) {\r\n      //     this.displayChess[i] = null\r\n      //   }\r\n      // }\r\n      let start = this.COORD_XY(3, 3) //51,循环开始处\r\n      let end = this.COORD_XY(11, 12) //203，循环结束处\r\n      let imgDomArr = document.querySelectorAll('div.imgBox img')\r\n      /*tag用作记录文件名关键信息；\r\n      **row是当前循环索引值i对应的二维坐标的行数,col是列数；\r\n      **imgIndex用于记录i对应第几个图片*/\r\n      let tag = '', row = 0, imgIndex = 0, col = 0;\r\n      for (let i = start; i <= end; i++) {\r\n        if (this.IN_BOARD(i)) {\r\n          switch (this.displayChess[i]) {\r\n            case 8:\r\n              tag = 'K';\r\n              break;\r\n            case 9:\r\n              tag = 'A';\r\n              break;\r\n            case 10:\r\n              tag = 'B';\r\n              break;\r\n            case 11:\r\n              tag = 'N';\r\n              break;\r\n            case 12:\r\n              tag = 'R';\r\n              break;\r\n            case 13:\r\n              tag = 'C';\r\n              break;\r\n            case 14:\r\n              tag = 'P';\r\n              break;\r\n\r\n            case 16:\r\n              tag = 'k_';\r\n              break;\r\n            case 17:\r\n              tag = 'a_';\r\n              break;\r\n            case 18:\r\n              tag = 'b_';\r\n              break;\r\n            case 19:\r\n              tag = 'n_';\r\n              break;\r\n            case 20:\r\n              tag = 'r_';\r\n              break;\r\n            case 21:\r\n              tag = 'c_';\r\n              break;\r\n            case 22:\r\n              tag = 'p_';\r\n              break;\r\n            case 1:\r\n              tag = 'UNexist';\r\n              break;\r\n            case 0:\r\n              tag = 'UNexist'\r\n              break;\r\n            default:\r\n              tag = 'UNexist'\r\n          }\r\n          row = this.RANK_Y(i)\r\n          col = this.FILE_X(i)\r\n          imgIndex = i - 7 * row - 30\r\n          let imgSrcStr = `/img/chess/${tag}.png`;\r\n          imgDomArr[imgIndex].src = imgSrcStr // 重新渲染棋子图片\r\n          /*清空变量*/\r\n          tag = '';\r\n          row = 0;\r\n          imgIndex = 0\r\n        }\r\n      }\r\n\r\n    },\r\n    FENCharToNum(item) {//将棋子字符转成对应的整数\r\n      switch (item) {\r\n        case 'K' : {\r\n          return 8;\r\n          break\r\n        }\r\n        case 'A':\r\n          return 9;\r\n          break\r\n        case 'B':\r\n          return 10;\r\n          break\r\n        case 'N':\r\n          return 11;\r\n          break\r\n        case 'R':\r\n          return 12;\r\n          break\r\n        case 'C':\r\n          return 13;\r\n          break\r\n        case 'P':\r\n          return 14;\r\n          break\r\n\r\n        case 'k':\r\n          return 16;\r\n          break\r\n        case 'a':\r\n          return 17;\r\n          break\r\n        case 'b':\r\n          return 18;\r\n          break\r\n        case 'n':\r\n          return 19;\r\n          break\r\n        case 'r':\r\n          return 20;\r\n          break\r\n        case 'c':\r\n          return 21;\r\n          break\r\n        case 'p':\r\n          return 22;\r\n          break\r\n        default:\r\n          return 1\r\n      }\r\n    },\r\n    /*判断各种棋子的走法*/\r\n    judgeMove(pieceVal, sqSrc, sqDest) {\r\n      // console.log('棋子数值:'+pieceVal);\r\n      if (this.playerSide) {//如果起点处为红方棋子pieceVal <= 14 && pieceVal >= 8\r\n        this.pcSelfSide = 8\r\n      } else\r\n        this.pcSelfSide = 16\r\n      let pieNum = pieceVal - this.pcSelfSide //棋子的编号，即this.pieceNumber中的某个值\r\n      let item = sqDest - sqSrc\r\n      if (pieNum === this.pieceNumber.king) {//将、帅\r\n        // console.log('移动的是将/帅');\r\n        // console.log('sqDest:' + sqDest);\r\n        // console.log('sqSrc:' + sqSrc);\r\n        if(sqDest > 128) {//证明是红方的帅在移动\r\n          this.KING0_INDEX = sqDest\r\n        }\r\n        else if(sqDest < 128) {\r\n          this.KING1_INDEX = sqDest\r\n        }\r\n        return ((item === -16 || item === 16 || item === 1 || item === -1)) && (this.IN_FORT(sqDest))\r\n      }\r\n      else if (pieNum === this.pieceNumber.advisor) {//士\r\n        return ((item === -17 || item === 17 || item === -15 || item === 15)) && (this.IN_FORT(sqDest))\r\n      }\r\n      else if (pieNum === this.pieceNumber.bishop) {//相\r\n        return ((item === -34 || item === 34 || item === -30 || item === 30))\r\n            && (this.SAME_HALF(sqSrc, sqDest))\r\n            && (this.displayChess[Math.floor((sqSrc + sqDest) / 2)] === 1)\r\n      }\r\n      else if (pieNum === this.pieceNumber.knight) {//马\r\n        let sqPin = sqSrc + this.KNIGHT_PIN_[sqDest - sqSrc + 256]\r\n        return ((item === -33) || (item === 33) || (item === -18) ||\r\n                (item === 18) || (item === -14) || (item === 14) ||\r\n                (item === -31) || (item === 31))\r\n            && (this.displayChess[sqPin] === 1)\r\n      }\r\n      else if (pieNum === this.pieceNumber.rook) {//车\r\n        let isHavePc = false\r\n        if (item > 0) {\r\n          if (item % 16 === 0) {//按列往下走\r\n            for (let i = sqSrc + 16; i < sqDest;) {\r\n              if (this.displayChess[i] >= 8) {\r\n                isHavePc = true\r\n                break\r\n              }\r\n              i += 16\r\n            }\r\n          } else {//向右移\r\n            for (let i = sqSrc + 1; i < sqDest; i++) {\r\n              if (this.displayChess[i] >= 8) {\r\n                isHavePc = true\r\n                break\r\n              }\r\n            }\r\n          }\r\n        } else if (item < 0) {\r\n          if (Math.abs(item) % 16 === 0) {//按列往上走\r\n            for (let i = sqSrc - 16; i > sqDest;) {\r\n              if (this.displayChess[i] >= 8) {\r\n                isHavePc = true\r\n                break\r\n              }\r\n              i -= 16;\r\n            }\r\n          } else {//向左移\r\n            for (let i = sqSrc - 1; i > sqDest; i--) {\r\n              if (this.displayChess[i] >= 8) {\r\n                isHavePc = true\r\n                break\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return (this.RANK_Y(sqSrc) === this.RANK_Y(sqDest) || this.FILE_X(sqSrc) === this.FILE_X(sqDest))\r\n            && !isHavePc\r\n      }\r\n      else if (pieNum === this.pieceNumber.cannon) {//炮\r\n        let havePcNum = 0, isHavePc = false\r\n        if (Math.abs(item) % 16 === 0) { //按列走\r\n          if (item > 0) {//往下走\r\n            for (let i = sqSrc + 16; i < sqDest;) {//按列往下走\r\n              if (this.displayChess[i] >= 8) {\r\n                // console.log(i);\r\n                havePcNum++\r\n                isHavePc = true\r\n                if (havePcNum > 1) break\r\n              }\r\n              i += 16\r\n            }\r\n          } else if (item < 0) {//往上走\r\n            for (let i = sqSrc - 16; i > sqDest;) {//按列往上走\r\n              if (this.displayChess[i] >= 8) {\r\n                // console.log(i);\r\n                havePcNum++\r\n                isHavePc = true\r\n                if (havePcNum > 1) break\r\n              }\r\n              i -= 16\r\n            }\r\n\r\n          }\r\n        } else {\r\n          if (item > 0) {//向右移\r\n            for (let i = sqSrc + 1; i < sqDest; i++) {\r\n              if (this.displayChess[i] >= 8) {\r\n                havePcNum++\r\n              }\r\n              if (havePcNum > 1) break\r\n            }\r\n          } else {//向左移\r\n            for (let i = sqSrc - 1; i > sqDest; i--) {\r\n              if (this.displayChess[i] >= 8) {\r\n                havePcNum++\r\n              }\r\n              if (havePcNum > 1) break\r\n            }\r\n          }\r\n        }\r\n        /*炮要想越过一个棋子，其终点处必须为对方棋子*/\r\n        let flag = false\r\n        if (this.playerSide) {//走棋方为红方\r\n          if (this.displayChess[sqDest] & 16) {//终点处为黑方棋子\r\n            flag = true\r\n          }\r\n        } else {\r\n          if (this.displayChess[sqDest] & 8) {//终点处为红方棋子\r\n            flag = true\r\n          }\r\n        }\r\n        return (this.RANK_Y(sqSrc) === this.RANK_Y(sqDest) || this.FILE_X(sqSrc) === this.FILE_X(sqDest)) //同行同列\r\n            && ((havePcNum === 1 && flag) || havePcNum === 0)\r\n      }\r\n      else if (pieNum === this.pieceNumber.pawn) {//兵\r\n        let sd, //用于标记走棋方\r\n            flag1 = false, //用于标记是否可以左右走\r\n            flag2 = false //用于标记是否可以往前走\r\n        if (this.pcSelfSide === 16) {//走棋方为黑方\r\n          sd = 1\r\n          if (item === 16) flag2 = true\r\n        } else if (this.pcSelfSide === 8) {//走棋方为红方\r\n          sd = 0\r\n          if (item === -16) flag2 = true\r\n        }\r\n\r\n        if (this.AWAY_HALF(sqDest, sd)) {\r\n          if (Math.abs(item) === 1) {\r\n            flag1 = true\r\n          }\r\n        }\r\n        return flag2 || flag1\r\n      }\r\n      else\r\n        console.log('走法不合法或点击了空白处');\r\n    },\r\n    /*判断将帅相对时游戏结束*/\r\n    judgeKtoK() {\r\n      let isHavePc_KING = false //用于查询将帅之间是否有棋子格挡\r\n      for(let i = this.KING1_INDEX + 16; i <= this.KING0_INDEX - 16;) {//查询将帅之间是否有棋子格挡\r\n        if(this.displayChess[i] >= 8) {\r\n          isHavePc_KING = true\r\n          // console.log('在i处有格挡:' + i);\r\n          break\r\n        }\r\n        i += 16\r\n      }\r\n      if(this.FILE_X(this.KING0_INDEX) === this.FILE_X(this.KING1_INDEX) && !isHavePc_KING) {\r\n        //将帅在同一列且中间无棋子格挡\r\n        if(this.playerSide) {//红方走\r\n          this.wScore += 40\r\n        }\r\n        else\r\n          this.bScore += 40\r\n        // this.playerSide = !this.playerSide\r\n        this.markBoard()\r\n        $('div.tipBox2').attr('style', 'display: flex;')\r\n        // console.log('将帅在同一列');\r\n      }\r\n    },\r\n    /*校验棋子的终点是否有本方棋子*/\r\n    isHaveSelfPc(pieceVal, sqDest) {\r\n      if (pieceVal & 8 === 1) {\r\n        this.pcSelfSide = 16 //红方棋子\r\n      } else\r\n        this.pcSelfSide = 8\r\n      console.log(this.displayChess[sqDest] & this.pcSelfSide);\r\n      return this.displayChess[sqDest] & this.pcSelfSide\r\n    },\r\n    RANK_Y(sq) {// 根据一维矩阵，获取二维矩阵行数 行数从0开始\r\n      return sq >> 4;\r\n    },\r\n    FILE_X(sq) {// 根据一维矩阵，获取二维矩阵列数\r\n      return sq & 15;\r\n    },\r\n    manageBoardArray() {\r\n      for (let i = 0; i < 256; i++) {\r\n        if ((this.displayChess[i] === undefined || this.displayChess[i] < 8) && this.IN_BOARD_[i]) {\r\n          this.displayChess[i] = 1\r\n        }\r\n      }\r\n    },\r\n    winSure() {\r\n      $('div.tipBox2').attr('style', 'display: none;')\r\n      this.initBoard()\r\n    },\r\n    markBoard() {\r\n      let wScore = this.wScore\r\n      if (wScore <= 20) this.wMarkMsg = this.markMsgArr[0];\r\n      else if (wScore <= 30) this.wMarkMsg = this.markMsgArr[1];\r\n      else if (wScore <= 40) this.wMarkMsg = this.markMsgArr[2];\r\n      else if (wScore <= 50) this.wMarkMsg = this.markMsgArr[3];\r\n      else if (wScore <= 60) this.wMarkMsg = this.markMsgArr[4];\r\n      else if (wScore > 60) this.wMarkMsg = this.markMsgArr[5];\r\n      else this.wMarkMsg = '暂无评分'\r\n      let bScore = this.bScore\r\n\r\n      if (bScore <= 20) this.bMarkMsg = this.markMsgArr[0];\r\n      else if (bScore <= 30) this.bMarkMsg = this.markMsgArr[1];\r\n      else if (bScore <= 40) this.bMarkMsg = this.markMsgArr[2];\r\n      else if (bScore <= 50) this.bMarkMsg = this.markMsgArr[3];\r\n      else if (bScore <= 60) this.bMarkMsg = this.markMsgArr[4];\r\n      else if (bScore > 60) this.bMarkMsg = this.markMsgArr[5];\r\n      else this.wMarkMsg = '暂无评分'\r\n    },\r\n    btnClick() {\r\n      console.log(-32 % 16);\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .totalBox {\r\n    position: relative;\r\n    font-size: 2ch;\r\n    .css2ebd673af7243b7 {\r\n      position: absolute;\r\n      right: 45%;\r\n      left: 45%;\r\n      top: 50%;\r\n      transform: translateX(-50%);\r\n      font-size: 2.5vw;\r\n      display: flex;\r\n      flex-wrap: nowrap;\r\n      width: 50%;\r\n    }\r\n    .tipBox {\r\n      font-family: 'LiShu';\r\n      position: absolute;\r\n      left: 10%;\r\n      top: 40%;\r\n      /* width: 2ch; */\r\n      /* transform: translateX(-50%); */\r\n      font-size: 2.5vw;\r\n      display: flex;\r\n      flex-direction: column;\r\n      /* align-items: baseline; */\r\n      flex-wrap: nowrap;\r\n      width: 1ch;\r\n    }\r\n\r\n    .tipBox2 {\r\n      display: none;\r\n      position: fixed;\r\n      width: 100%;\r\n      height: 100%;\r\n      background-color: rgba(38, 50, 56, .9);\r\n      color: white;\r\n      //display: flex;\r\n      justify-content: center;\r\n      //align-items: center;\r\n      flex-wrap: wrap;\r\n      padding: 5px;\r\n      z-index: 1;\r\n      .winMsg {\r\n        display: flex;\r\n        width: 100%;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 5vw;\r\n        .scoreBox {\r\n          display: flex;\r\n          margin-bottom: -20vw;\r\n          .wScore {\r\n            width: 100%;\r\n            text-align: center;\r\n          }\r\n          .bScore {\r\n            width: 100%;\r\n            text-align: center;\r\n          }\r\n          .commentBox {\r\n            width: 100%;\r\n          }\r\n        }\r\n      }\r\n      .btnBox {\r\n        width: 100%;\r\n        //display: flex;\r\n        text-align: center;\r\n        justify-content: center;\r\n      }\r\n    }\r\n\r\n    .f1 {\r\n      margin: 5px;\r\n      border: none;\r\n      box-sizing: border-box;\r\n      padding: 13px 10px;\r\n      color: white;\r\n      background-color: #1a6aa6;\r\n      border-radius: 10px;\r\n      cursor: pointer;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .f1:hover {\r\n      background-color: #12609b;\r\n    }\r\n  }\r\n  @font-face {\r\n    font-family: 'LiShu';\r\n    src: url(\"../public/css/LiShu/LiShu.eot\"); /* IE9 */\r\n    src: url(\"../public/css/LiShu/LiShu.eot?#iefix\") format(\"embedded-opentype\"); /* IE6-IE8 */\r\n\r\n    src: url('../public/css/LiShu/LiShu.woff') format('woff'), /* Modern Browsers */\r\n    url('../public/css/LiShu/LiShu.ttf')  format('truetype'), /* Safari, Android, iOS */\r\n    url(\"../public/css/LiShu/LiShu.svg\")  format('svg'); /* Legacy iOS */\r\n  }\r\n</style>"]}]}