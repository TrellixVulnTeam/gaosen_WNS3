{"remainingRequest":"D:\\CodingForFun\\Vue\\gaosen\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\CodingForFun\\Vue\\gaosen\\node_modules\\vuepress-theme-reco\\components\\Page.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\CodingForFun\\Vue\\gaosen\\node_modules\\vuepress-theme-reco\\components\\Page.vue","mtime":1651131560259},{"path":"D:\\CodingForFun\\Vue\\gaosen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648514419946},{"path":"D:\\CodingForFun\\Vue\\gaosen\\node_modules\\babel-loader\\lib\\index.js","mtime":1648514420186},{"path":"D:\\CodingForFun\\Vue\\gaosen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648514419946},{"path":"D:\\CodingForFun\\Vue\\gaosen\\node_modules\\vue-loader\\lib\\index.js","mtime":1648514420515}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCwgY29tcHV0ZWQsIHRvUmVmcyB9IGZyb20gJ3Z1ZS1kZW1pJwppbXBvcnQgUGFnZUluZm8gZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvUGFnZUluZm8nCmltcG9ydCB7IHJlc29sdmVQYWdlLCBvdXRib3VuZFJFLCBlbmRpbmdTbGFzaFJFIH0gZnJvbSAnQHRoZW1lL2hlbHBlcnMvdXRpbHMnCmltcG9ydCB7IE1vZHVsZVRyYW5zaXRpb24gfSBmcm9tICdAdnVlcHJlc3MtcmVjby9jb3JlL2xpYi9jb21wb25lbnRzJwppbXBvcnQgU3ViU2lkZWJhciBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9TdWJTaWRlYmFyJwppbXBvcnQgeyB1c2VJbnN0YW5jZSB9IGZyb20gJ0B0aGVtZS9oZWxwZXJzL2NvbXBvc2FibGUnCmltcG9ydCBDb21tZW50IGZyb20gJy4vQ29tbWVudCcKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7IFBhZ2VJbmZvLCBNb2R1bGVUcmFuc2l0aW9uLCBTdWJTaWRlYmFyLCBDb21tZW50IH0sCgogIHByb3BzOiBbJ3NpZGViYXJJdGVtcyddLAoKICBzZXR1cCAocHJvcHMsIGN0eCkgewogICAgY29uc3QgaW5zdGFuY2UgPSB1c2VJbnN0YW5jZSgpCgogICAgY29uc3QgeyBzaWRlYmFySXRlbXMgfSA9IHRvUmVmcyhwcm9wcykKCiAgICBjb25zdCByZWNvU2hvd01vZHVsZSA9IGNvbXB1dGVkKCgpID0+IGluc3RhbmNlLiRwYXJlbnQucmVjb1Nob3dNb2R1bGUpCgogICAgLy8gLy8g5piv5ZCm5pi+56S66K+E6K66CiAgICAvLyBjb25zdCBzaG91bGRTaG93Q29tbWVudHMgPSBjb21wdXRlZCgoKSA9PiB7CiAgICAvLyAgIGNvbnN0IHsgaXNTaG93Q29tbWVudHMgfSA9IGluc3RhbmNlLiRmcm9udG1hdHRlcgogICAgLy8gICBjb25zdCB7IHNob3dDb21tZW50IH0gPSBpbnN0YW5jZS4kdGhlbWVDb25maWcudmFsaW5lQ29uZmlnIHx8IHsgc2hvd0NvbW1lbnQ6IHRydWUgfQogICAgLy8gICByZXR1cm4gKHNob3dDb21tZW50ICE9PSBmYWxzZSAmJiBpc1Nob3dDb21tZW50cyAhPT0gZmFsc2UpIHx8IChzaG93Q29tbWVudCA9PT0gZmFsc2UgJiYgaXNTaG93Q29tbWVudHMgPT09IHRydWUpCiAgICAvLyB9KQoKICAgIGNvbnN0IHNob3dBY2Nlc3NOdW1iZXIgPSBjb21wdXRlZCgoKSA9PiB7CiAgICAgIGNvbnN0IHsKICAgICAgICAkdGhlbWVDb25maWc6IHsgdmFsaW5lQ29uZmlnIH0sCiAgICAgICAgJHRoZW1lTG9jYWxlQ29uZmlnOiB7IHZhbGluZUNvbmZpZzogdmFsaW5lTG9jYWxDb25maWcgfQogICAgICB9ID0gaW5zdGFuY2UgfHwge30KCiAgICAgIGNvbnN0IHZjID0gdmFsaW5lTG9jYWxDb25maWcgfHwgdmFsaW5lQ29uZmlnCgogICAgICByZXR1cm4gdmMgJiYgdmMudmlzaXRvciAhPSBmYWxzZQogICAgfSkKCiAgICBjb25zdCBsYXN0VXBkYXRlZCA9IGNvbXB1dGVkKCgpID0+IHsKICAgICAgaWYgKGluc3RhbmNlLiR0aGVtZUNvbmZpZy5sYXN0VXBkYXRlZCA9PT0gZmFsc2UpIHJldHVybiBmYWxzZQogICAgICByZXR1cm4gaW5zdGFuY2UuJHBhZ2UubGFzdFVwZGF0ZWQKICAgIH0pCgogICAgY29uc3QgbGFzdFVwZGF0ZWRUZXh0ID0gY29tcHV0ZWQoKCkgPT4gewogICAgICBpZiAodHlwZW9mIGluc3RhbmNlLiR0aGVtZUxvY2FsZUNvbmZpZy5sYXN0VXBkYXRlZCA9PT0gJ3N0cmluZycpIHsKICAgICAgICByZXR1cm4gaW5zdGFuY2UuJHRoZW1lTG9jYWxlQ29uZmlnLmxhc3RVcGRhdGVkCiAgICAgIH0KICAgICAgaWYgKHR5cGVvZiBpbnN0YW5jZS4kdGhlbWVDb25maWcubGFzdFVwZGF0ZWQgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgcmV0dXJuIGluc3RhbmNlLiR0aGVtZUNvbmZpZy5sYXN0VXBkYXRlZAogICAgICB9CiAgICAgIHJldHVybiAnTGFzdCBVcGRhdGVkJwogICAgfSkKCiAgICBjb25zdCBwcmV2ID0gY29tcHV0ZWQoKCkgPT4gewogICAgICBjb25zdCBmcm9udG1hdHRlclByZXYgPSBpbnN0YW5jZS4kZnJvbnRtYXR0ZXIucHJldgogICAgICBpZiAoZnJvbnRtYXR0ZXJQcmV2ID09PSBmYWxzZSkgewogICAgICAgIHJldHVybgogICAgICB9IGVsc2UgaWYgKGZyb250bWF0dGVyUHJldikgewogICAgICAgIHJldHVybiByZXNvbHZlUGFnZShpbnN0YW5jZS4kc2l0ZS5wYWdlcywgZnJvbnRtYXR0ZXJQcmV2LCBpbnN0YW5jZS4kcm91dGUucGF0aCkKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gcmVzb2x2ZVByZXYoaW5zdGFuY2UuJHBhZ2UsIHNpZGViYXJJdGVtcy52YWx1ZSkKICAgICAgfQogICAgfSkKCiAgICBjb25zdCBuZXh0ID0gY29tcHV0ZWQoKCkgPT4gewogICAgICBjb25zdCBmcm9udG1hdHRlck5leHQgPSBpbnN0YW5jZS4kZnJvbnRtYXR0ZXIubmV4dAogICAgICBpZiAobmV4dCA9PT0gZmFsc2UpIHsKICAgICAgICByZXR1cm4KICAgICAgfSBlbHNlIGlmIChmcm9udG1hdHRlck5leHQpIHsKICAgICAgICByZXR1cm4gcmVzb2x2ZVBhZ2UoaW5zdGFuY2UuJHNpdGUucGFnZXMsIGZyb250bWF0dGVyTmV4dCwgaW5zdGFuY2UuJHJvdXRlLnBhdGgpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHJlc29sdmVOZXh0KGluc3RhbmNlLiRwYWdlLCBzaWRlYmFySXRlbXMudmFsdWUpCiAgICAgIH0KICAgIH0pCgogICAgY29uc3QgZWRpdExpbmsgPSBjb21wdXRlZCgoKSA9PiB7CiAgICAgIGlmIChpbnN0YW5jZS4kZnJvbnRtYXR0ZXIuZWRpdExpbmsgPT09IGZhbHNlKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgIH0KICAgICAgY29uc3QgewogICAgICAgIHJlcG8sCiAgICAgICAgZWRpdExpbmtzLAogICAgICAgIGRvY3NEaXIgPSAnJywKICAgICAgICBkb2NzQnJhbmNoID0gJ21hc3RlcicsCiAgICAgICAgZG9jc1JlcG8gPSByZXBvCiAgICAgIH0gPSBpbnN0YW5jZS4kdGhlbWVDb25maWcKCiAgICAgIGlmIChkb2NzUmVwbyAmJiBlZGl0TGlua3MgJiYgaW5zdGFuY2UuJHBhZ2UucmVsYXRpdmVQYXRoKSB7CiAgICAgICAgcmV0dXJuIGNyZWF0ZUVkaXRMaW5rKHJlcG8sIGRvY3NSZXBvLCBkb2NzRGlyLCBkb2NzQnJhbmNoLCBpbnN0YW5jZS4kcGFnZS5yZWxhdGl2ZVBhdGgpCiAgICAgIH0KICAgICAgcmV0dXJuICcnCiAgICB9KQoKICAgIGNvbnN0IGVkaXRMaW5rVGV4dCA9IGNvbXB1dGVkKCgpID0+IHsKICAgICAgcmV0dXJuICgKICAgICAgICBpbnN0YW5jZS4kdGhlbWVMb2NhbGVDb25maWcuZWRpdExpbmtUZXh0IHx8IGluc3RhbmNlLiR0aGVtZUNvbmZpZy5lZGl0TGlua1RleHQgfHwgYEVkaXQgdGhpcyBwYWdlYAogICAgICApCiAgICB9KQoKICAgIGNvbnN0IHBhZ2VTdHlsZSA9IGNvbXB1dGVkKCgpID0+IHsKICAgICAgcmV0dXJuIGluc3RhbmNlLiRzaG93U3ViU2lkZUJhciA/IHt9IDogeyBwYWRkaW5nUmlnaHQ6ICcwJyB9CiAgICB9KQoKICAgIHJldHVybiB7CiAgICAgIHJlY29TaG93TW9kdWxlLAogICAgICAvLyBzaG91bGRTaG93Q29tbWVudHMsCiAgICAgIHNob3dBY2Nlc3NOdW1iZXIsCiAgICAgIGxhc3RVcGRhdGVkLAogICAgICBsYXN0VXBkYXRlZFRleHQsCiAgICAgIHByZXYsCiAgICAgIG5leHQsCiAgICAgIGVkaXRMaW5rLAogICAgICBlZGl0TGlua1RleHQsCiAgICAgIHBhZ2VTdHlsZQogICAgfQogIH0sCgp9KQoKZnVuY3Rpb24gY3JlYXRlRWRpdExpbmsgKHJlcG8sIGRvY3NSZXBvLCBkb2NzRGlyLCBkb2NzQnJhbmNoLCBwYXRoKSB7CiAgY29uc3QgYml0YnVja2V0ID0gL2JpdGJ1Y2tldC5vcmcvCiAgaWYgKGJpdGJ1Y2tldC50ZXN0KHJlcG8pKSB7CiAgICBjb25zdCBiYXNlID0gb3V0Ym91bmRSRS50ZXN0KGRvY3NSZXBvKQogICAgICA/IGRvY3NSZXBvCiAgICAgIDogcmVwbwogICAgcmV0dXJuICgKICAgICAgYmFzZS5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKSArCiAgICAgICAgYC9zcmNgICsKICAgICAgICBgLyR7ZG9jc0JyYW5jaH0vYCArCiAgICAgICAgKGRvY3NEaXIgPyBkb2NzRGlyLnJlcGxhY2UoZW5kaW5nU2xhc2hSRSwgJycpICsgJy8nIDogJycpICsKICAgICAgICBwYXRoICsKICAgICAgICBgP21vZGU9ZWRpdCZzcGE9MCZhdD0ke2RvY3NCcmFuY2h9JmZpbGV2aWV3ZXI9ZmlsZS12aWV3LWRlZmF1bHRgCiAgICApCiAgfQoKICBjb25zdCBiYXNlID0gb3V0Ym91bmRSRS50ZXN0KGRvY3NSZXBvKQogICAgPyBkb2NzUmVwbwogICAgOiBgaHR0cHM6Ly9naXRodWIuY29tLyR7ZG9jc1JlcG99YAoKICByZXR1cm4gKAogICAgYmFzZS5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKSArCiAgICBgL2VkaXRgICsKICAgIGAvJHtkb2NzQnJhbmNofS9gICsKICAgIChkb2NzRGlyID8gZG9jc0Rpci5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKSArICcvJyA6ICcnKSArCiAgICBwYXRoCiAgKQp9CgpmdW5jdGlvbiByZXNvbHZlUHJldiAocGFnZSwgaXRlbXMpIHsKICByZXR1cm4gZmluZChwYWdlLCBpdGVtcywgLTEpCn0KCmZ1bmN0aW9uIHJlc29sdmVOZXh0IChwYWdlLCBpdGVtcykgewogIHJldHVybiBmaW5kKHBhZ2UsIGl0ZW1zLCAxKQp9CgpmdW5jdGlvbiBmaW5kIChwYWdlLCBpdGVtcywgb2Zmc2V0KSB7CiAgY29uc3QgcmVzID0gW10KICBmbGF0dGVuKGl0ZW1zLCByZXMpCiAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXMubGVuZ3RoOyBpKyspIHsKICAgIGNvbnN0IGN1ciA9IHJlc1tpXQogICAgaWYgKGN1ci50eXBlID09PSAncGFnZScgJiYgY3VyLnBhdGggPT09IGRlY29kZVVSSUNvbXBvbmVudChwYWdlLnBhdGgpKSB7CiAgICAgIHJldHVybiByZXNbaSArIG9mZnNldF0KICAgIH0KICB9Cn0KCmZ1bmN0aW9uIGZsYXR0ZW4gKGl0ZW1zLCByZXMpIHsKICBmb3IgKGxldCBpID0gMCwgbCA9IGl0ZW1zLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgaWYgKGl0ZW1zW2ldLnR5cGUgPT09ICdncm91cCcpIHsKICAgICAgZmxhdHRlbihpdGVtc1tpXS5jaGlsZHJlbiB8fCBbXSwgcmVzKQogICAgfSBlbHNlIHsKICAgICAgcmVzLnB1c2goaXRlbXNbaV0pCiAgICB9CiAgfQp9Cgo="},null]}