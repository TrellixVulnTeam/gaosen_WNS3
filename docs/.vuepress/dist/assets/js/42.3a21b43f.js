(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{816:function(t,e,a){"use strict";a.r(e);var n=a(4),i=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("在我的程序中，固定电脑执黑棋，红方先走。搜索算法的深度为二层。")])]),a("h2",{attrs:{id:"局面评估"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局面评估"}},[t._v("#")]),t._v(" 局面评估")]),t._v(" "),a("p",[t._v("局面评估，就是判断局面对红方（或黑方）的优势，并把优势量化。棋子价值可用以下不等式表达：")]),t._v(" "),a("p",[t._v("帅 > 车 > 马、炮 > 仕、相 > 兵")]),t._v(" "),a("p",[t._v("棋子价值可以简单量化为：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("兵")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("仕")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("相")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("炮")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("马")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("车")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("帅")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("10")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("20")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("20")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("40")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("45")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("90")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1000")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("但是棋子价值是跟位置有关系的，比如兵在过河前价值很小，过河后价值大涨。在我的程序中，就不考虑这个了。")])]),a("h2",{attrs:{id:"搜索算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搜索算法"}},[t._v("#")]),t._v(" 搜索算法")]),t._v(" "),a("p",[t._v("思路：轮到电脑方执棋时:")]),t._v(" "),a("ol",[a("li",[t._v("电脑先计算求出所有红方可能走的棋子，选出对红方最有利的走法。")]),t._v(" "),a("li",[t._v("然后电脑得知了红方下一步最有可能怎么走。")]),t._v(" "),a("li",[t._v("电脑计算求出所有它可以走的棋子，找出能阻断破坏上述对红方最有利的走法、或对自己黑方最有利的走法。")]),t._v(" "),a("li",[t._v("比如红方将军，轮到电脑执棋时，电脑会检索到红方将军这一步走法，然后尝试阻断这一将军；而在没有将军时，电脑也会尝试去吃掉红方价值最大的棋子。")])]),t._v(" "),a("div",{staticClass:"mermaid"},[t._v("\ngraph LR\n  A --- B\n  B--\x3eC[fa:fa-ban forbidden]\n  B--\x3eD(fa:fa-spinner)\n  B--\x3eE(fa:fa-spinner aaa)\n  B--\x3eF(fa:fa-spinner aaa)\n  B--\x3eG(fa:fa-spinner aaa)\n  B--\x3eH(fa:fa-spinner aaa)\n  B--\x3eI(fa:fa-spinner aaa)\n")])])}),[],!1,null,null,null);e.default=i.exports}}]);